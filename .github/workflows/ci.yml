# Sources:
# https://github.com/SeaQL/sea-orm/blob/master/.github/workflows/rust.yml

name: Fydia Builder

on:
  push:

jobs:
  clippy-fmt:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: rui314/setup-mold@v1
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: >
            --no-deps

  build_fydia:
    name: Build Fydia
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: rui314/setup-mold@v1
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Fydia
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p fydia --release
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: "Linux-release"
          path: "/home/runner/work/fydia/fydia/target/release/fydia"
      - name: Fydia
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p fydia --features=sample
      - run: |
            mkdir test-env
            cd test-env
            echo '[instance]
            domain = ""

            [server]
            ip = "0.0.0.0"
            port = 8080

            [database]
            database_type = "Sqlite"
            ip = "fydia_test"
            port = 3306
            name = ""
            password = ""
            database_name = "Fydia"' >> config.toml
            chmod +x ../target/release/fydia
            ../target/release/fydia &
            cd ..
            cargo test -p fydia-test
            killall fydia
          
  delete-artifacts:
    needs: [build_fydia]
    runs-on: ubuntu-latest
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 1hr
