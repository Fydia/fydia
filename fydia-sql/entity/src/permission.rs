//! `SeaORM` Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]
#[sea_orm(table_name = "Permission")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub channel_id: String,
    pub roles: Option<i32>,
    pub values: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::roles::Entity",
        from = "Column::Roles",
        to = "super::roles::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Roles,
    #[sea_orm(
        belongs_to = "super::channels::Entity",
        from = "Column::ChannelId",
        to = "super::channels::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Channels,
}

impl Related<super::roles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Roles.def()
    }
}

impl Related<super::channels::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Channels.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
